{"version":3,"sources":["Utils/DataTable.util.tsx","api/bestSheetApi.tsx","logo.png","reportWebVitals.ts","Components/RowTable.tsx","Components/ResultOverlay.tsx","Home.tsx","index.tsx","Interfaces/interfaces.tsx"],"names":["checkLastVisit","date","Date","getTime","parse","formatData","rows","_","map","row","properties","Object","keys","rowObj","key","UID","COLUMN_INDEX","family_surname","last_visit","visited_in_last_week","address_city","number_of_kids","address_street","address_postcode","crossing_city","border_crossing","comments","formatForWrite","Family Surname/Прізвище","Number of Kids/Кількість дітей","Address - Street/ Вулиця","Address - Postcode/ Поштовий код","Address - City/ Місто","Border Crossing Date/ Дата перетину кордону","City where came from/ Місто походження","Last Visit","Visited in Last Week","Comments","submitUser","editedUser","data","setDataFormatted","result","_Users_kkrantz_Desktop_jcc_jcc_check_in_jcc_check_in_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","oldRow","res","finalRes","writeData","then","checkIn","id","setCheckInDisabled","format","isSelected","exportData","ws","XLSX","json_to_sheet","wb","book_new","filePath","require","join","__dirname","book_append_sheet","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","__await","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","getData","_ref","_Users_kkrantz_Desktop_jcc_jcc_check_in_jcc_check_in_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__","_callee","_context","axios","get","console","log","apply","arguments","_ref2","_callee2","_context2","patch","concat","response","_x","module","__webpack_require__","p","reportWebVitals","onPerfEntry","Function","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","RowTable","props","user","setEditedUser","react_default","a","createElement","COLUMN_FIELD","column","TextField","onChange","set","ResultOverlay","isShown","canEdit","setShowOverlay","dataFormatted","_useState","useState","_useState2","slicedToArray","find","Overlay","isModal","onEscape","onBackgroundClick","className","Fragment","Components_RowTable","onClick","Home","cols","_useState3","_useState4","_useState5","_useState6","selected","setSelected","_useState7","_useState8","checkInDisabled","_useState9","_useState10","showOverlay","_useState11","_useState12","searchValue","setSearchValue","_useState13","_useState14","setCanEdit","tempvar","useEffect","flatten","formatRetrievedData","OverlayProps","src","logo","alt","disabled","SearchField","Components_ResultOverlay","DataTable","isSelectable","onSelect","index","swapSelected","objectSpread","selectColumn","emptyCellText","hasLightHeader","Column","field","href","target","rel","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_Home","COLUMN_NAMES","d","__webpack_exports__"],"mappings":"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","file":"static/js/main.42171523.chunk.js","sourcesContent":["import {COLUMN_INDEX, COLUMN_NAMES, COLUMN_ORDER, IDataRow, IRow} from \"../Interfaces/interfaces\"\nimport _ from \"lodash\";\nimport { format } from 'date-fns';\nimport  * as XLSX from \"xlsx\" ;\nimport {writeData} from \"../api/bestSheetApi\";\n\nexport const setDataToFormatted = (data: IRow[], setDataFormatted: (value: unknown[]) => void) => {\n    setDataFormatted(formatData(data as any));\n}\nconst checkLastVisit = (date: string) => {\n    if(date === null) {\n        return 'No'\n    }\n    const today = new Date().getTime();\n    const lastVisit = Date.parse(date)\n    const difference = (today - lastVisit)/(1000*3600*24);\n    return difference <= 7 ? 'Yes' : 'No'\n}\nexport const formatData = (rows: any,) => {\n        const data: IDataRow[] = _.map(rows, (row) => {\n            const properties = Object.keys(row);\n            const rowObj = _.map(properties, (key) => row[key])\n            return {\n                UID: rowObj[COLUMN_INDEX.UID] ? rowObj[COLUMN_INDEX.UID]: -1,\n                family_surname: rowObj[COLUMN_INDEX.family_surname] ? rowObj[COLUMN_INDEX.family_surname]:  [],\n                last_visit: rowObj[COLUMN_INDEX.last_visit],\n                visited_in_last_week: rowObj[COLUMN_INDEX.visited_in_last_week] ? checkLastVisit(rowObj[COLUMN_INDEX.last_visit]) : 'No',\n                address_city: rowObj[COLUMN_INDEX.address_city] ? rowObj[COLUMN_INDEX.address_city] :'--',\n                number_of_kids: rowObj[COLUMN_INDEX.number_of_kids] ? rowObj[COLUMN_INDEX.number_of_kids]: '--',\n                address_street: rowObj[COLUMN_INDEX.address_street] ? rowObj[COLUMN_INDEX.address_street]: '--',\n                address_postcode: rowObj[COLUMN_INDEX.address_postcode] ? rowObj[COLUMN_INDEX.address_postcode]: '--',\n                crossing_city: rowObj[COLUMN_INDEX.crossing_city] ? rowObj[COLUMN_INDEX.crossing_city]: '--',\n                border_crossing: rowObj[COLUMN_INDEX.border_crossing] ? rowObj[COLUMN_INDEX.border_crossing]: '--',\n                comments: rowObj[COLUMN_INDEX.comments] ? rowObj[COLUMN_INDEX.comments]: '--',\n\n            }\n        })\n        return data\n};\n\nconst formatForWrite = (row: IDataRow) => {\n    return {\n        'UID': row.UID,\n        \"Family Surname/Прізвище\": row.family_surname,\n        'Number of Kids/Кількість дітей': row.number_of_kids,\n        'Address - Street/ Вулиця': row.address_street,\n        'Address - Postcode/ Поштовий код': row.address_postcode,\n        'Address - City/ Місто': row.address_city,\n        'Border Crossing Date/ Дата перетину кордону': row.border_crossing,\n        'City where came from/ Місто походження': row.crossing_city,\n        'Last Visit': row.last_visit,\n        'Visited in Last Week': row.visited_in_last_week,\n        'Comments': row.comments\n    }\n}\n\nexport const submitUser =(editedUser: any, row: IDataRow, data: any, setDataFormatted: (data: unknown[]) => {},) => {\n    const result = {...row, ...editedUser}\n    const newData = _.map(data, (oldRow) => {\n        if(oldRow.UID === result.UID) {\n            const res = {\n                ...oldRow,\n                ...result,\n            }\n            const finalRes = {\n                ...res,\n                visited_in_last_week: checkLastVisit(res.last_visit)\n            }\n            writeData(formatForWrite(finalRes)).then();\n            return finalRes\n        }\n        return oldRow\n    })\n    setDataFormatted(newData);\n}\nexport const checkIn = (id: string, data: any, setDataFormatted: (data: unknown[]) => {}, setCheckInDisabled:(value: boolean) => {}) => {\n   const result =_.map(data, (row) => {\n        if(row.UID == id) {\n            const result = {\n                ...row,\n                last_visit: format(new Date(), 'yyyy-MM-dd'),\n                visited_in_last_week: 'Yes',\n                isSelected: false,\n            }\n            writeData(formatForWrite(result)).then();\n            return result\n        }\n        return row\n    })\n    setDataFormatted(result);\n    setCheckInDisabled(true)\n}\nexport const exportData = (data: any) => {\n    const ws = XLSX.utils.json_to_sheet(data);\n    const wb =  XLSX.utils.book_new();\n    const path = require('path');\n    const filePath = path.join(__dirname, 'Data/example_data.xlsx');\n    XLSX.utils.book_append_sheet(wb, ws, \"Example_Data\");\n    XLSX.writeFile(wb, filePath)\n    //XLSX.writeFile(wb, \"../Data/example_data.xlsx\");\n}\n\n","import axios from \"axios\"\nimport React from \"react\";\n\nexport const getData = async () => {\n    const result = await axios.get('https://sheet.best/api/sheets/259f7bec-fcd6-4be1-846d-c3c5dd47c8c3').then(res => {\n        return res\n    }).catch((error) => {\n        console.log(error);\n    });\n    return result\n}\n\nexport const writeData = async (data: { UID: string; 'Family Surname/Прізвище': string | undefined; 'Number of Kids/Кількість дітей': number | undefined; 'Address - Street/ Вулиця': string | undefined; 'Address - Postcode/ Поштовий код': string | undefined; 'Address - City/ Місто': string | undefined; 'Border Crossing Date/ Дата перетину кордону': string | undefined; 'City where came from/ Місто походження': string | undefined; 'Last Visit': string | undefined; 'Visited in Last Week': string | undefined; Comments: string | undefined; }) => {\n    const result = await axios.patch(`https://sheet.best/api/sheets/259f7bec-fcd6-4be1-846d-c3c5dd47c8c3/UID/${data.UID}`, data).then( response => {console.log(response)})\n}","module.exports = __webpack_public_path__ + \"static/media/logo.21319a63.png\";","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport {TextField} from \"lucid-ui\";\nimport {COLUMN_FIELD, IDataRow} from \"../Interfaces/interfaces\";\nimport _ from \"lodash\";\n\ninterface IRowTableProps {\n    user: any,\n    canEdit: boolean,\n    editedUser: {},\n    setEditedUser: (value: {}) => {}\n}\n\nconst RowTable = (props: IRowTableProps) => {\n    const {user, editedUser, setEditedUser} = props;\n    return (\n        <div>\n            {\n            _.map(COLUMN_FIELD, (column) => {\n                return (\n                    <div>\n                        <div>\n                            {column}\n                        </div>\n                        <TextField value={_.get(user, column)} onChange={(value) => {setEditedUser(_.set(editedUser,column, value))}}/>\n                    </div>\n                )\n            })\n        }\n        </div>\n    )\n}\n\nexport default RowTable","import {IDataRow} from \"../Interfaces/interfaces\";\nimport React, {useState} from \"react\";\nimport Overlay from \"lucid-ui/dist/esm/components/Overlay/Overlay\";\nimport _ from \"lodash\";\nimport {checkIn, submitUser} from \"../Utils/DataTable.util\";\nimport RowTable from \"./RowTable\";\n\nexport interface IProps {\n    id: string,\n    isShown: boolean,\n    canEdit: boolean,\n    setShowOverlay(value: boolean): any,\n    dataFormatted: IDataRow[],\n    setDataFormatted(value: IDataRow[]): any,\n    setCheckInDisabled(value: boolean):any\n}\nconst ResultOverlay: React.FC<IProps> = (props:IProps) => {\n    const {id, isShown, canEdit, setShowOverlay, dataFormatted, setDataFormatted, setCheckInDisabled} = props\n    const [editedUser, setEditedUser] = useState({})\n    const user: IDataRow = _.find(dataFormatted, (row) => {\n        if(row.UID) {\n            if (row.UID === id) {\n                return row as unknown as IDataRow\n            }\n        }\n    }) as unknown as IDataRow\n    return (\n        <Overlay\n            isShown={isShown}\n            isModal={true}\n            onEscape={() => props.setShowOverlay(false)}\n            onBackgroundClick={() => setShowOverlay(false)} >\n            <div className='main-content'>\n                <>\n                <form className='Add-Point-Form' method=\"get\">\n                    <label>\n                        Id: {`${id}`}\n                    </label>\n                </form>\n                <RowTable user={user} canEdit={canEdit as boolean} editedUser={editedUser} setEditedUser={setEditedUser as (value: {}) => {}}/>\n                <div className='Controls'>\n                    <button onClick={() =>\n                    {\n                        setShowOverlay(false);\n                        canEdit?  submitUser(editedUser, user, dataFormatted, setDataFormatted as (data: {}) => {}):\n                            checkIn(user.UID, dataFormatted as IDataRow[], setDataFormatted as (data: {}) => {}, setCheckInDisabled as (value: {}) => {})\n\n                    }\n                    }>\n                        {canEdit? 'Submit': 'Check In'}\n                    </button>\n                    <button onClick={() => setShowOverlay(false)}>\n                        Cancel\n                    </button>\n                </div>\n                    </>\n            </div>\n        </Overlay>\n    )\n}\nexport default ResultOverlay","import React, {useEffect, useState} from 'react';\nimport logo from './logo.png';\nimport './App.css';\nimport _ from \"lodash\"\nimport {checkIn, exportData, formatData} from \"./Utils/DataTable.util\";\nimport {COLUMN_FIELD, IDataRow} from \"./Interfaces/interfaces\";\nimport DataTable from \"lucid-ui/dist/esm/components/DataTable/DataTable\";\nimport ResultOverlay, {IProps} from \"./Components/ResultOverlay\";\nimport {SearchField} from \"lucid-ui\";\nimport {getData} from \"./api/bestSheetApi\";\n\nfunction Home() {\n    const [data, setData] = useState({rows: [] as [], cols: []} as any );\n    const [dataFormatted, setDataFormatted] = useState( [] as unknown as IDataRow[]);\n    const [selected, setSelected]= useState('-1');\n    const [checkInDisabled, setCheckInDisabled] = useState(true);\n    const [showOverlay, setShowOverlay] = useState(false as boolean);\n    const [searchValue, setSearchValue] = useState('' as string)\n    const [canEdit, setCanEdit] = useState(false as boolean);\n    let tempvar = 0;\n    useEffect( () => {\n        if(tempvar ===0 ) {\n            getData().then((res: any) => {\n                const data = _.flatten(res.data) as unknown as IDataRow\n                const formatRetrievedData = formatData(data);\n                setDataFormatted(formatRetrievedData)\n            })\n            tempvar = 1;\n        }\n\n    }, [data])\n\n    // useEffect(() => {\n    //     if(dataFormatted[0] != null) {\n    //         setShowButtons(true);\n    //     }\n    //     else {\n    //         setShowButtons(false);\n    //     }\n    // }, [dataFormatted])\n\n    const selectColumn= (index: IDataRow) => {\n        setSelected(index.UID);\n        const swapSelected = _.map(dataFormatted, (row) => {\n            if( index.UID === row.UID ){\n                return {\n                    ...row,\n                    isSelected: index.isSelected? false : true,\n                }\n            }\n            else {\n                return {...row}\n            }\n        }) as IDataRow[];\n        setSearchValue(index.UID)\n        setDataFormatted(swapSelected)\n        setCheckInDisabled(!checkInDisabled)\n    }\n\n    const OverlayProps = {\n        id: searchValue,\n        isShown: showOverlay,\n        canEdit: canEdit,\n        setShowOverlay: (value: boolean) => {setShowOverlay(value)},\n        dataFormatted: dataFormatted,\n        setDataFormatted: (value: IDataRow[]) => {setDataFormatted(value)},\n        setCheckInDisabled: (value: boolean) => {setCheckInDisabled(value)},\n    }\n    return (\n        <div className=\"App\">\n            { showOverlay &&\n            <div id=\"opaque\"></div>\n            }\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <div>\n                    JCC Krakow Check In\n                </div>\n            </header>\n            <div className=\"Grid-Header\">\n                <div className=\"Buttons\">\n                    <button onClick={() => {exportData(dataFormatted)}}>\n                        Export\n                    </button>\n                    <button disabled={checkInDisabled} onClick={() => checkIn(selected, dataFormatted as IDataRow[], setDataFormatted as (data: {}) => {}, setCheckInDisabled as (value: boolean) => {})}>\n                        Check In\n                    </button>\n                    <button>\n                        Add Family\n                    </button>\n                    <button disabled={checkInDisabled} onClick={() => {setShowOverlay(true); setCanEdit(true)}}>\n                        Edit Family\n                    </button>\n                </div>\n            </div>\n            <div className=\"App-Body\">\n                <p>\n                    <div className='search-bar'>\n                        Enter Id:\n                        <SearchField onChange={(value: string) => setSearchValue(value)}/>\n                        <div className='submit'>\n                            <button onClick={() => {setShowOverlay(true); setCanEdit(false)}}> Submit </button>\n                        </div>\n                    </div>\n                    <ResultOverlay {...OverlayProps as IProps}/>\n\n                    <div  className=\"data-table\">\n                        {dataFormatted ? (\n                            <DataTable\n                                data={dataFormatted}\n                                isSelectable\n                                onSelect={(index) => selectColumn(index)}\n                                emptyCellText={\"--\"}\n                                hasLightHeader={false}\n                            >\n                                {_.map(COLUMN_FIELD, (name) => {\n                                    return <DataTable.Column field={`${name}`}> {name} </DataTable.Column>\n\n                                })}\n                            </DataTable>\n                        ) : (\n                            \"\"\n                        )}\n                    </div>\n                </p>\n            </div>\n            <a\n                className=\"App-link\"\n                href=\"https://reactjs.org\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n            >\n            </a>\n        </div>\n    );\n}\n\nexport default Home;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Home from \"./Home\";\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <Home />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export interface IRow {\n    id: number;\n    householdMembers?: IClient[];\n    lastVisit: string;\n    visitedInLastWeek: string;\n    address?: string;\n    hometown?: string;\n    isSelected?: boolean\n}\n\nexport interface IClient {\n    firstName?: string;\n    lastName?: string;\n    age?: number;\n    gender?: string;\n}\n\nexport interface IDataRow {\n    UID: string;\n    family_surname?: string;\n    number_of_kids?: number;\n    address_street?: string;\n    address_postcode?: string;\n    address_city?: string;\n    border_crossing?: string;\n    crossing_city?: string;\n    last_visit?: string;\n    visited_in_last_week?: string;\n    comments?: string;\n    isSelected?: boolean;\n}\nexport enum COLUMN_FIELD {\n    UID='UID',\n    family_surname= 'family_surname',\n    number_of_kids= 'number_of_kids',\n    address_street= 'address_street',\n    address_postcode= 'address_postcode',\n    address_city= 'address_city',\n    crossing_city='crossing_city',\n    border_crossing= 'border_crossing',\n    last_visit= 'last_visit',\n    visited_in_last_week= 'visited_in_last_week',\n    comments= 'comments'\n}\n\nexport enum COLUMN_NAMES {\n    UID= 'UID',\n    family_surname= 'Family Surname/Прізвище',\n    number_of_kids='Number of Kids/Кількість дітей',\n    address_street= 'Address - Street/ Вулиця',\n    address_postcode= 'Address - Postcode/ Поштовий код',\n    address_city= 'Address - City/ Місто',\n    border_crossing= 'Border Crossing Date/ Дата перетину кордону',\n    crossing_city='City where came from/ Місто походження',\n    last_visit= 'Last Visit',\n    visited_in_last_week= 'Visited in Last Week',\n    comments= 'Comments'\n}\nexport enum COLUMN_INDEX {\n    UID= 0,\n    family_surname= 1,\n    number_of_kids= 3,\n    address_street= 6,\n    address_postcode= 7,\n    address_city= 8,\n    crossing_city=9,\n    border_crossing= 10,\n    last_visit= 11,\n    visited_in_last_week= 12,\n    comments= 13\n}\nexport const COLUMN_ORDER: Record<number, COLUMN_NAMES> = {\n    1: COLUMN_NAMES.UID,\n    2: COLUMN_NAMES.family_surname,\n    4: COLUMN_NAMES.number_of_kids,\n    7: COLUMN_NAMES.address_street,\n    8: COLUMN_NAMES.address_postcode,\n    9: COLUMN_NAMES.address_city,\n    10: COLUMN_NAMES.crossing_city,\n    11: COLUMN_NAMES.border_crossing,\n    12: COLUMN_NAMES.last_visit,\n    13: COLUMN_NAMES.visited_in_last_week,\n    14: COLUMN_NAMES.comments,\n}"],"sourceRoot":""}