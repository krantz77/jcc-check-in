{"version":3,"sources":["Utils/DataTable.util.tsx","api/bestSheetApi.tsx","logo.png","reportWebVitals.ts","Components/RowTable.tsx","Components/ResultOverlay.tsx","Home.tsx","index.tsx","Interfaces/interfaces.tsx"],"names":["checkLastVisit","date","Date","getTime","parse","formatData","rows","tally","setTally","_","map","row","properties","Object","keys","rowObj","key","visited_in_last_week","COLUMN_INDEX","last_visit","UID","family_surname","name","family_member_two","family_member_three","number_of_kids","address_street","crossing_city","border_crossing","comments","deny","isDisabled","isActive","formatForWrite","Family Surname","Number of Kids/Кількість дітей","Family Member Two","Family Member Three","Address - Street/ Вулиця","Border Crossing Date/ Дата перетину кордону","City where came from/ Місто походження","Last Visit","Visited in Last Week","Comments","Deny","Previous Visits","previous_visits","submitUser","editedUser","data","setDataFormatted","setEditedUser","formatted","writeDataNew","then","flatten","concat","result","_Users_kkrantz_Desktop_jcc_jcc_check_in_jcc_check_in_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","newData","oldRow","res","finalRes","writeData","getTally","checkIn","user","setCheckInDisabled","setCheckOutDisabled","searchResult","setSearchResult","isEmpty","format","isSelected","checkOut","exportData","ws","json_to_sheet","wb","book_new","filePath","require","join","__dirname","book_append_sheet","writeFile","getSearchResults","searchValue","options","includes","toLower","without","undefined","forEach","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","__await","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","getData","_ref","_Users_kkrantz_Desktop_jcc_jcc_check_in_jcc_check_in_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__","_callee","_context","axios","get","console","log","apply","arguments","_ref2","_callee2","_context2","patch","response","_x","_ref3","_callee3","_context3","post","_x2","module","__webpack_require__","p","reportWebVitals","onPerfEntry","Function","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","React","memo","props","react_default","a","createElement","COLUMN_FIELD","column","TextField","onChange","set","_props$searchValue","isShown","canEdit","setShowOverlay","dataFormatted","setSearchValue","_useState","useState","_useState2","slicedToArray","find","Overlay","isModal","onEscape","onBackgroundClick","className","Fragment","Components_RowTable","onClick","cols","_useState3","_useState4","_useState5","_useState6","selected","setSelected","_useState7","_useState8","checkInDisabled","_useState9","_useState10","checkOutDisabled","_useState11","_useState12","editDisabled","setEditDisabled","_useState13","_useState14","showOverlay","_useState15","_useState16","_useState17","_useState18","setCanEdit","_useState19","_useState20","_useState21","_useState22","_useState23","_useState24","index","setIndex","tempvar","useEffect","formatRetrievedData","OverlayProps","lengthOfData","id","src","logo","alt","disabled","SearchField","onChangeDebounced","onSubmit","Components_ResultOverlay","DataTable","isSelectable","onSelect","swapSelected","objectSpread","selectColumn","emptyCellText","hasLightHeader","Column","field","Paginator","onPageSelect","selectedPageIndex","totalCount","href","target","rel","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_Home","createStore","COLUMN_NAMES","d","__webpack_exports__"],"mappings":"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","file":"static/js/main.cd7ba7c6.chunk.js","sourcesContent":["import {COLUMN_INDEX, IDataRow,} from \"../Interfaces/interfaces\"\nimport _ from \"lodash\";\nimport { format } from 'date-fns';\n//import  * as XLSX from \"xlsx\" ;\n// @ts-ignore\nimport {json_to_sheet, book_new, book_append_sheet, writeFile} from \"xlsx\";\nimport {writeData, writeDataNew} from \"../api/bestSheetApi\";\n\nconst checkLastVisit = (date: string) => {\n    if(date === null) {\n        return 'No'\n    }\n    const today = new Date().getTime();\n    const lastVisit = Date.parse(date)\n    const difference = (today - lastVisit)/(1000*3600*24);\n    const result = difference <= 7 ? 'Yes' : 'No'\n\n    return result\n}\nexport const formatData = (rows: any, tally: number, setTally: (number: any) => {}) => {\n        const data: IDataRow[] = _.map(rows, (row) => {\n            const properties = Object.keys(row);\n            const rowObj = _.map(properties, (key) => row[key])\n            const visited_in_last_week = rowObj[COLUMN_INDEX.visited_in_last_week] ? checkLastVisit(rowObj[COLUMN_INDEX.last_visit]) : 'No';\n            setTally(tally + 1)\n            return {\n                UID: rowObj[COLUMN_INDEX.UID] ? rowObj[COLUMN_INDEX.UID]: -1,\n                family_surname: rowObj[COLUMN_INDEX.family_surname] ? rowObj[COLUMN_INDEX.family_surname]:  [],\n                name: rowObj[COLUMN_INDEX.name] ? rowObj[COLUMN_INDEX.name] :[],\n                family_member_two: rowObj[COLUMN_INDEX.family_member_two] ? rowObj[COLUMN_INDEX.family_member_two]: [],\n                family_member_three: rowObj[COLUMN_INDEX.family_member_three] ? rowObj[COLUMN_INDEX.family_member_three]: [],\n                last_visit: rowObj[COLUMN_INDEX.last_visit],\n                visited_in_last_week,\n                number_of_kids: rowObj[COLUMN_INDEX.number_of_kids] ? rowObj[COLUMN_INDEX.number_of_kids]: '--',\n                address_street: rowObj[COLUMN_INDEX.address_street] ? rowObj[COLUMN_INDEX.address_street]: '--',\n                crossing_city: rowObj[COLUMN_INDEX.crossing_city] ? rowObj[COLUMN_INDEX.crossing_city]: '--',\n                border_crossing: rowObj[COLUMN_INDEX.border_crossing] ? rowObj[COLUMN_INDEX.border_crossing]: '--',\n                comments: rowObj[COLUMN_INDEX.comments] ? rowObj[COLUMN_INDEX.comments]: '--',\n                deny: rowObj[COLUMN_INDEX.deny] ? rowObj[COLUMN_INDEX.deny]: '--',\n                isDisabled: visited_in_last_week === \"Yes\" ? true : false,\n                isActive: rowObj[COLUMN_INDEX.deny] === \"Deny\" ? true : false,\n            }\n        })\n        return data\n};\n\nconst formatForWrite = (row: IDataRow) => {\n    return {\n        'UID': row.UID ? row.UID : '--',\n        'Family Surname': row.family_surname ? row.family_surname :'--',\n        'Number of Kids/Кількість дітей': row.number_of_kids ? row.number_of_kids : '--',\n        'Family Member Two': row.family_member_two ? row.family_member_two : '--',\n        'Family Member Three': row.family_member_three ? row.family_member_three : '--',\n        'Address - Street/ Вулиця': row.address_street? row.address_street : '--',\n        'Border Crossing Date/ Дата перетину кордону': row.border_crossing ? row.border_crossing : '--',\n        'City where came from/ Місто походження': row.crossing_city ? row.crossing_city : '--',\n        'Last Visit': row.last_visit? row.last_visit  : '--',\n        'Visited in Last Week': row.visited_in_last_week? row.visited_in_last_week : '--',\n        'Comments': row.comments ? row.comments : '--',\n        'Deny': row.deny? row.deny  : '--',\n        'Previous Visits': row.previous_visits ? row.previous_visits  : '--'\n    }\n}\n\nexport const submitUser = (editedUser: any, row: IDataRow | null, data: any, setDataFormatted: (data: unknown[]) => {}, setEditedUser: (value: {}) => {}, setTally: (tally:number) => {}) => {\n    if(row === null) {\n        const formatted = formatForWrite(editedUser);\n        writeDataNew(formatted).then();\n        setDataFormatted(_.flatten(_.concat(data, editedUser)))\n    }\n    else {\n        const result = {...row, ...editedUser}\n        const newData = _.map(data, (oldRow) => {\n            if (oldRow.UID === row.UID) {\n                const res = {\n                    ...oldRow,\n                    ...result,\n                }\n                const finalRes = {\n                    ...res,\n                    visited_in_last_week: checkLastVisit(res.last_visit),\n                    isDisabled: res.visited_in_last_week === \"Yes\" ? true : false,\n                    isActive: res.deny === \"Deny\" || res.deny === \"deny\"  ? true : false,\n                }\n                const formatted = formatForWrite(finalRes);\n                writeData(formatted).then();\n                return finalRes\n            }\n            else {\n                return oldRow\n            }\n        })\n        setDataFormatted(newData);\n        setTally(getTally(newData))\n    }\n    setEditedUser({})\n}\nexport const checkIn = (user: any, data: any, tally:number, setDataFormatted: (data: unknown[]) => {}, setCheckInDisabled:(value: boolean) => {}, setCheckOutDisabled:(value: boolean) => {}, searchResult: any, setSearchResult: (data: unknown[])=>{}, setTally:(tally:number)=>{}) => {\n   const result =_.map(_.isEmpty(searchResult) ? data : searchResult, (row) => {\n        if(row.UID == user) {\n            const result = {\n                ...row,\n                last_visit: format(new Date(), 'yyyy-MM-dd'),\n                visited_in_last_week: 'Yes',\n                isSelected: false,\n                isDisabled: true,\n                previous_visits: _.isEmpty(row.last_visit) ? row.previous_visits : [row.previous_visits, row.last_visit]\n            }\n            setTally(tally +1)\n            writeData(formatForWrite(result)).then();\n            return result\n        }\n        return row\n    })\n    _.isEmpty(searchResult) ? setDataFormatted(result) : setSearchResult(result)\n    setCheckInDisabled(true);\n   setCheckOutDisabled(false)\n}\n\nexport const checkOut = (user: any, data: any, tally:number, setDataFormatted: (data: unknown[]) => {}, setCheckInDisabled:(value: boolean) => {}, setCheckOutDisabled:(value: boolean) => {}, searchResult: any, setSearchResult: (data: unknown[])=>{}, setTally:(tally:number)=>{}) => {\n    const result =_.map(_.isEmpty(searchResult) ? data : searchResult, (row) => {\n        if(row.UID == user) {\n            const result = {\n                ...row,\n                last_visit: '--',\n                visited_in_last_week: 'No',\n                isSelected: false,\n                isDisabled: true,\n                previous_visits: _.isEmpty(row.last_visit) ? row.previous_visits : [row.previous_visits, row.last_visit]\n            }\n            setTally(tally +1)\n            writeData(formatForWrite(result)).then();\n            return result\n        }\n        return row\n    })\n    _.isEmpty(searchResult) ? setDataFormatted(result) : setSearchResult(result)\n    setCheckInDisabled(false);\n    setCheckOutDisabled(true);\n};\n\nexport const exportData = (data: any) => {\n    const ws = json_to_sheet(data);\n    const wb =  book_new();\n    const path = require('path');\n    const filePath = path.join(__dirname, 'Data/example_data.xlsx');\n    book_append_sheet(wb, ws, \"Example_Data\");\n    writeFile(wb, filePath)\n}\n\n\nexport const getSearchResults = (searchValue: string, data: IDataRow[]) => {\n    const result = _.map(data, (row) => {\n        const options = row.UID + row.family_surname + row.family_member_two + row.family_member_three\n        if(_.includes(_.toLower(options), _.toLower(searchValue))) {\n            return row\n        }\n    })\n    return _.without(result, undefined)as IDataRow[]\n}\n\nexport const getTally = (data: IDataRow[]) => {\n    let result = 0;\n    _.forEach(data, (row) => {\n        if (row.visited_in_last_week === 'Yes') {\n            result = result +1\n        }\n    })\n    return result\n}","import axios from \"axios\"\nimport React from \"react\";\n\nexport const getData = async () => {\n    const result = await axios.get('https://sheet.best/api/sheets/259f7bec-fcd6-4be1-846d-c3c5dd47c8c3').then(res => {\n        return res\n    }).catch((error) => {\n        console.log(error);\n    });\n    return result\n}\nexport const writeData = async (data: { \"Family Member Three\": string; \"Visited in Last Week\": string; Comments: string; Deny: string; \"Previous Visits\": string[] | string; UID: string; \"City where came from/ Місто походження\": string; \"Border Crossing Date/ Дата перетину кордону\": string; \"Family Surname\": string; \"Family Member Two\": string; \"Number of Kids/Кількість дітей\": number | string; \"Address - Street/ Вулиця\": string; \"Last Visit\": string }) => {\n    await axios.patch(`https://sheet.best/api/sheets/259f7bec-fcd6-4be1-846d-c3c5dd47c8c3/UID/${data.UID}`, data).then( response => {console.log(response)})\n}\nexport const writeDataNew = async (data: { \"Family Member Three\": string; \"Visited in Last Week\": string; Comments: string; Deny: string; \"Previous Visits\": string[] | string; UID: string; \"City where came from/ Місто походження\": string; \"Border Crossing Date/ Дата перетину кордону\": string; \"Family Surname\": string; \"Family Member Two\": string; \"Number of Kids/Кількість дітей\": number | string; \"Address - Street/ Вулиця\": string; \"Last Visit\": string }) => {\n    await axios.post(`https://sheet.best/api/sheets/259f7bec-fcd6-4be1-846d-c3c5dd47c8c3`, data).then( response => {console.log(response)})\n}","module.exports = __webpack_public_path__ + \"static/media/logo.21319a63.png\";","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport {TextField} from \"lucid-ui\";\nimport {COLUMN_FIELD, IDataRow} from \"../Interfaces/interfaces\";\nimport _ from \"lodash\";\n\ninterface IRowTableProps {\n    user: any,\n    canEdit: boolean,\n    editedUser: {},\n    setEditedUser: (value: {}) => {}\n}\n\nconst RowTable = (props: IRowTableProps) => {\n    const {user, editedUser, setEditedUser} = props;\n    return (\n        <div>\n            {\n            _.map(COLUMN_FIELD, (column) => {\n                return (\n                    <div>\n                        <div>\n                            {column}\n                        </div>\n                        <TextField value={_.get(user, column)} onChange={(value) => {setEditedUser(_.set(editedUser,column, value))}}/>\n                    </div>\n                )\n            })\n        }\n        </div>\n    )\n}\n\nexport default React.memo(RowTable);","import {IDataRow} from \"../Interfaces/interfaces\";\nimport React, {useState} from \"react\";\nimport Overlay from \"lucid-ui/dist/esm/components/Overlay/Overlay\";\nimport _ from \"lodash\";\nimport {checkIn, submitUser} from \"../Utils/DataTable.util\";\nimport RowTable from \"./RowTable\";\n\nexport interface IProps {\n    searchValue?: string,\n    isShown: boolean,\n    canEdit: boolean,\n    tally: number\n    setShowOverlay(value: boolean): any,\n    dataFormatted: IDataRow[],\n    setDataFormatted(value: IDataRow[]): any,\n    setCheckInDisabled(value: boolean):any,\n    setCheckOutDisabled(value: boolean):any,\n    setSearchValue(value: any):any,\n    searchResult: IDataRow[],\n    setSearchResult(value: IDataRow[]):any,\n    setTally(tally: number):any,\n}\nconst ResultOverlay: React.FC<IProps> = (props:IProps) => {\n    const {searchValue = null, isShown, canEdit, setShowOverlay, dataFormatted, setDataFormatted, setCheckInDisabled, setCheckOutDisabled, setSearchValue, searchResult, setSearchResult, setTally, tally} = props\n    const [editedUser, setEditedUser] = useState({})\n    const user: IDataRow | null = searchValue ?_.find(dataFormatted, (row) => {\n        if(row.UID || row.family_surname) {\n            if (row.UID == searchValue || row.family_surname == searchValue) {\n                return row as unknown as IDataRow\n            }\n        }\n    }) as unknown as IDataRow : null;\n    return (\n        <Overlay\n            isShown={isShown}\n            isModal={true}\n            onEscape={() => props.setShowOverlay(false)}\n            onBackgroundClick={() => setShowOverlay(false)} >\n            <div className='main-content'>\n                <>\n                <form className='Add-Point-Form' method=\"get\">\n                    <label>\n                        {`${searchValue}`}\n                    </label>\n                </form>\n                <RowTable user={user} canEdit={canEdit as boolean} editedUser={editedUser} setEditedUser={setEditedUser as (value: {}) => {}}/>\n                <div className='Controls'>\n                    <button onClick={() =>\n                    {\n                        setShowOverlay(false);\n                        canEdit?  submitUser(editedUser, user, dataFormatted, setDataFormatted as (data: {}) => {}, setEditedUser as (() => {}), setTally):\n                            checkIn(user, dataFormatted as IDataRow[], tally, setDataFormatted as (data: {}) => {}, setCheckInDisabled as (value: {}) => {}, setCheckOutDisabled as (value: {}) => {}, searchResult as IDataRow[], setSearchResult as (data: {}) => {}, setTally);\n                        setSearchValue(null)\n\n                    }\n                    }>\n                        {canEdit? 'Submit': 'Check In'}\n                    </button>\n                    <button onClick={() => {setShowOverlay(false); setSearchValue(null)}}>\n                        Cancel\n                    </button>\n                </div>\n                    </>\n            </div>\n        </Overlay>\n    )\n}\nexport default React.memo(ResultOverlay);","import React, {useEffect, useMemo, useState} from 'react';\nimport logo from './logo.png';\nimport './App.css';\nimport _ from \"lodash\"\nimport {checkIn, checkOut, exportData, formatData, getSearchResults, getTally} from \"./Utils/DataTable.util\";\nimport {COLUMN_FIELD, IDataRow} from \"./Interfaces/interfaces\";\nimport DataTable from \"lucid-ui/dist/esm/components/DataTable/DataTable\";\nimport ResultOverlay, {IProps} from \"./Components/ResultOverlay\";\nimport {Paginator, SearchField} from \"lucid-ui\";\nimport {getData} from \"./api/bestSheetApi\";\n\nconst Home = () => {\n        const [data, setData] = useState({rows: [] as [], cols: []} as any);\n        const [dataFormatted, setDataFormatted] = useState( [] as unknown as IDataRow[]);\n        const [selected, setSelected] = useState('-1');\n        const [checkInDisabled, setCheckInDisabled] = useState(true);\n        const [checkOutDisabled, setCheckOutDisabled] = useState(true);\n        const [editDisabled, setEditDisabled] = useState(true);\n        const [showOverlay, setShowOverlay] = useState(false as boolean);\n        const [searchValue, setSearchValue] = useState('' as string)\n        const [canEdit, setCanEdit] = useState(false as boolean);\n        const [searchResult, setSearchResult] = useState([] as IDataRow[]);\n        const [tally, setTally] = useState(0);\n        const [index, setIndex] = useState(0);\n        let tempvar = 0;\n        useEffect(() => {\n            if (tempvar === 0) {\n                getData().then((res: any) => {\n                    const data = _.flatten(res.data) as unknown as IDataRow\n                    const formatRetrievedData = formatData(data, tally, setTally as ()=> {});\n                    setDataFormatted(formatRetrievedData)\n                    setTally(getTally(formatRetrievedData))\n\n                })\n                tempvar = 1;\n            }\n        }, [data])\n\n        const selectColumn = (index: IDataRow) => {\n            setEditDisabled(selected === index.UID);\n            setCheckInDisabled(selected === index.UID || index.visited_in_last_week === \"Yes\")\n            setCheckOutDisabled(selected === index.UID )\n            const swapSelected = _.map(_.isEmpty(searchResult) ? dataFormatted : searchResult, (row) => {\n                if (index.UID === row.UID) {\n                    return {\n                        ...row,\n                        isSelected: index.isSelected ? false : true,\n                    }\n                } else {\n                    return {\n                        ...row,\n                        isSelected: false\n                    }\n                }\n            }) as IDataRow[];\n            setSearchValue(index.UID)\n            _.isEmpty(searchResult) ? setDataFormatted(swapSelected) : setSearchResult(swapSelected)\n\n        }\n\n        const OverlayProps = {\n            searchValue: searchValue,\n            isShown: showOverlay,\n            canEdit: canEdit,\n            setShowOverlay: (value: boolean) => {\n                setShowOverlay(value)\n            },\n            dataFormatted: dataFormatted,\n            setDataFormatted: (value: IDataRow[]) => {\n                setDataFormatted(value)\n            },\n            setCheckInDisabled: (value: boolean) => {\n                setCheckInDisabled(value)\n            },\n            setCheckOutDisabled: (value: boolean) => {\n                setCheckOutDisabled(value)\n            },\n            setSearchValue: (value: any) => {\n                setSearchValue(value)\n            },\n            searchResult,\n            setSearchResult,\n            setTally,\n            tally\n        }\n        const lengthOfData = dataFormatted.length? dataFormatted.length : 0;\n    return (\n            <div className=\"App\">\n                {showOverlay &&\n                <div id=\"opaque\"></div>\n                }\n                <header className=\"App-header\">\n                    <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n                    <div>\n                        JCC Krakow Check In\n                    </div>\n                </header>\n                <div className=\"Grid-Header\">\n                    <div>\n                        This Week's Tally: {tally}\n                    </div>\n                    <div className=\"Buttons\">\n                        <button disabled={checkInDisabled}\n                                onClick={() => checkIn(selected, dataFormatted as IDataRow[], tally, setDataFormatted as (data: {}) => {}, setCheckInDisabled as (value: boolean) => {}, setCheckOutDisabled as (value: boolean) => {},searchResult, setSearchResult as (data: {}) => {},setTally as (tally: {}) => {})}>\n                            Check In\n                        </button>\n                        <button disabled={checkOutDisabled}\n                                onClick={() => checkOut(selected, dataFormatted as IDataRow[], tally, setDataFormatted as (data: {}) => {}, setCheckInDisabled as (value: boolean) => {}, setCheckOutDisabled as (value: boolean) => {},searchResult, setSearchResult as (data: {}) => {},setTally as (tally: {}) => {})}>\n                            Check Out\n                        </button>\n                        <button onClick={() => {\n                            setShowOverlay(true);\n                            setCanEdit(true)\n                        }}>\n                            Add Family\n                        </button>\n                        <button disabled={editDisabled} onClick={() => {\n                            setShowOverlay(true);\n                            setCanEdit(true)\n                        }}>\n                            Edit Family\n                        </button>\n                        <button onClick={() => {\n                            exportData(dataFormatted)\n                        }}>\n                            Export\n                        </button>\n                    </div>\n                </div>\n                <div className=\"App-Body\">\n                    <p>\n                        <div className='search-bar'>\n                            Search by surname or UID:\n                            <SearchField onChangeDebounced={(value: string) => setSearchValue(value)}\n                                         onSubmit={() => setSearchResult(getSearchResults(searchValue, dataFormatted))}/>\n                            <div className='submit'>\n                                <button\n                                    onClick={() => setSearchResult(getSearchResults(searchValue, dataFormatted))}> Submit\n                                </button>\n                            </div>\n                            <div className='clear'>\n                                <button\n                                    onClick={() => setSearchResult(getSearchResults('', dataFormatted))}> Clear\n                                </button>\n                            </div>\n                        </div>\n                        <ResultOverlay {...OverlayProps as IProps}/>\n                        <div className=\"data-table\">\n                            {dataFormatted ? (\n                                <DataTable\n                                    data={_.isEmpty(searchResult) ? index == 0 ? dataFormatted.slice(0,9) : dataFormatted.slice(index*10, index*10+9) : searchResult}\n                                    isSelectable\n                                    onSelect={(index) => {\n                                        setSelected(index.UID);\n                                        selectColumn(index)\n                                    }}\n                                    emptyCellText={\"--\"}\n                                    hasLightHeader={false}\n                                >\n                                    {_.map(COLUMN_FIELD, (name) => {\n                                        return (\n                                            <DataTable.Column field={`${name}`}> {name} </DataTable.Column>)\n                                    })}\n                                </DataTable>\n                            ) : (\n                                \"\"\n                            )}\n                            <Paginator onPageSelect={(index:number) => {setIndex(index)}}\n                                       selectedPageIndex={index}\n                                       totalCount={lengthOfData}\n                            />\n                        </div>\n                    </p>\n                </div>\n                <a\n                    className=\"App-link\"\n                    href=\"https://reactjs.org\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                </a>\n            </div>\n        );\n    }\n\nexport default React.memo(Home);\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Home from \"./Home\";\nimport { createStore } from 'redux';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\n\nroot.render(\n  <React.StrictMode>\n    <Home />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\nconst countReducer = function (state = 0, action: { type: any; }) {\n    switch (action.type) {\n        case \"INCREMENT\":\n            return state + 1;\n        case \"DECREMENT\":\n            return state - 1;\n        default:\n            return state;\n    }\n};\nlet store = createStore(countReducer);","export interface IDataRow {\n    UID: string;\n    family_surname?: string;\n    name?: string;\n    family_member_two?: string;\n    family_member_three?: string;\n    number_of_kids?: number;\n    address_street?: string;\n    border_crossing?: string;\n    crossing_city?: string;\n    last_visit?: string;\n    visited_in_last_week?: string;\n    comments?: string;\n    deny?: string;\n    previous_visits?: string[];\n    isSelected?: boolean;\n}\nexport enum COLUMN_FIELD {\n    UID='UID',\n    family_surname= 'family_surname',\n    name= 'name',\n    number_of_kids= 'number_of_kids',\n    family_member_two= 'family_member_two',\n    family_member_three= 'family_member_three',\n    address_street= 'address_street',\n    crossing_city='crossing_city',\n    border_crossing= 'border_crossing',\n    last_visit= 'last_visit',\n    visited_in_last_week= 'visited_in_last_week',\n    comments= 'comments',\n    deny='deny',\n}\n\nexport enum COLUMN_NAMES {\n    UID= 'UID',\n    family_surname= 'Family Surname',\n    number_of_kids='Number of Kids/Кількість дітей',\n    family_member_two='Family Member Two',\n    family_member_three='Family Member Three',\n    address_street= 'Address - Street/ Вулиця',\n    border_crossing= 'Border Crossing Date/ Дата перетину кордону',\n    crossing_city='City where came from/ Місто походження',\n    last_visit= 'Last Visit',\n    visited_in_last_week= 'Visited in Last Week',\n    comments= 'Comments',\n    deny='Deny',\n    previous_visits='Previous Visits'\n}\nexport enum COLUMN_INDEX {\n    UID= 0,\n    family_surname= 1,\n    name= 2,\n    number_of_kids= 3,\n    family_member_two=2,\n    family_member_three=4,\n    address_street= 6,\n    crossing_city=9,\n    border_crossing= 10,\n    last_visit= 11,\n    visited_in_last_week= 12,\n    comments= 13,\n    deny=14,\n    previous_visits=15\n}\nexport const COLUMN_ORDER: Record<number, COLUMN_NAMES> = {\n    1: COLUMN_NAMES.UID,\n    2: COLUMN_NAMES.family_surname,\n    4: COLUMN_NAMES.number_of_kids,\n    7: COLUMN_NAMES.address_street,\n    10: COLUMN_NAMES.crossing_city,\n    11: COLUMN_NAMES.border_crossing,\n    12: COLUMN_NAMES.last_visit,\n    13: COLUMN_NAMES.visited_in_last_week,\n    14: COLUMN_NAMES.comments,\n    15: COLUMN_NAMES.deny,\n    16: COLUMN_NAMES.previous_visits,\n    17: COLUMN_NAMES.family_member_two,\n    18: COLUMN_NAMES.family_member_three\n}"],"sourceRoot":""}