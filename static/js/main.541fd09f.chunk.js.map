{"version":3,"sources":["Utils/DataTable.util.tsx","api/bestSheetApi.tsx","logo.png","reportWebVitals.ts","Components/RowTable.tsx","Components/ResultOverlay.tsx","Home.tsx","index.tsx","Interfaces/interfaces.tsx"],"names":["checkLastVisit","date","Date","getTime","parse","formatData","rows","_","map","row","properties","Object","keys","rowObj","key","visited_in_last_week","COLUMN_INDEX","last_visit","UID","family_surname","family_member_two","family_member_three","number_of_kids","address_street","crossing_city","border_crossing","comments","deny","isDisabled","isActive","formatForWrite","Family Surname","Number of Kids/Кількість дітей","Family Member Two","Family Member Three","Address - Street/ Вулиця","Border Crossing Date/ Дата перетину кордону","City where came from/ Місто походження","Last Visit","Visited in Last Week","Comments","Deny","Previous Visits","previous_visits","submitUser","editedUser","data","setDataFormatted","setEditedUser","formatted","writeDataNew","then","flatten","concat","result","_Users_kkrantz_Desktop_jcc_jcc_check_in_jcc_check_in_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","oldRow","res","finalRes","writeData","checkIn","user","setCheckInDisabled","searchResult","setSearchResult","isEmpty","format","isSelected","exportData","ws","XLSX","json_to_sheet","wb","book_new","filePath","require","join","__dirname","book_append_sheet","getSearchResults","searchValue","options","includes","toLower","without","undefined","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","__await","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","getData","_ref","_Users_kkrantz_Desktop_jcc_jcc_check_in_jcc_check_in_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__","_callee","_context","axios","get","console","log","apply","arguments","_ref2","_callee2","_context2","patch","response","_x","_ref3","_callee3","_context3","post","_x2","module","__webpack_require__","p","reportWebVitals","onPerfEntry","Function","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","RowTable","props","react_default","a","createElement","COLUMN_FIELD","column","TextField","onChange","set","ResultOverlay","_props$searchValue","isShown","canEdit","setShowOverlay","dataFormatted","setSearchValue","_useState","useState","_useState2","slicedToArray","find","Overlay","isModal","onEscape","onBackgroundClick","className","Fragment","Components_RowTable","onClick","Home","cols","_useState3","_useState4","_useState5","_useState6","selected","setSelected","_useState7","_useState8","checkInDisabled","_useState9","_useState10","editDisabled","setEditDisabled","_useState11","_useState12","showOverlay","_useState13","_useState14","_useState15","_useState16","setCanEdit","_useState17","_useState18","tempvar","useEffect","formatRetrievedData","OverlayProps","id","src","logo","alt","disabled","SearchField","onChangeDebounced","onSubmit","Components_ResultOverlay","DataTable","isSelectable","onSelect","index","swapSelected","objectSpread","selectColumn","emptyCellText","hasLightHeader","Column","field","href","target","rel","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_Home","createStore","COLUMN_NAMES","d","__webpack_exports__"],"mappings":"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","file":"static/js/main.541fd09f.chunk.js","sourcesContent":["import {COLUMN_INDEX, COLUMN_NAMES, COLUMN_ORDER, IDataRow, IRow} from \"../Interfaces/interfaces\"\nimport _ from \"lodash\";\nimport { format } from 'date-fns';\nimport  * as XLSX from \"xlsx\" ;\nimport {writeData, writeDataNew} from \"../api/bestSheetApi\";\n\nexport const setDataToFormatted = (data: IRow[], setDataFormatted: (value: unknown[]) => void) => {\n    setDataFormatted(formatData(data as any));\n}\nconst checkLastVisit = (date: string) => {\n    if(date === null) {\n        return 'No'\n    }\n    const today = new Date().getTime();\n    const lastVisit = Date.parse(date)\n    const difference = (today - lastVisit)/(1000*3600*24);\n    return difference <= 7 ? 'Yes' : 'No'\n}\nexport const formatData = (rows: any,) => {\n        const data: IDataRow[] = _.map(rows, (row) => {\n            const properties = Object.keys(row);\n            const rowObj = _.map(properties, (key) => row[key])\n            const visited_in_last_week = rowObj[COLUMN_INDEX.visited_in_last_week] ? checkLastVisit(rowObj[COLUMN_INDEX.last_visit]) : 'No';\n            return {\n                UID: rowObj[COLUMN_INDEX.UID] ? rowObj[COLUMN_INDEX.UID]: -1,\n                family_surname: rowObj[COLUMN_INDEX.family_surname] ? rowObj[COLUMN_INDEX.family_surname]:  [],\n                family_member_two: rowObj[COLUMN_INDEX.family_member_two] ? rowObj[COLUMN_INDEX.family_member_two]: [],\n                family_member_three: rowObj[COLUMN_INDEX.family_member_three] ? rowObj[COLUMN_INDEX.family_member_three]: [],\n                last_visit: rowObj[COLUMN_INDEX.last_visit],\n                visited_in_last_week,\n                number_of_kids: rowObj[COLUMN_INDEX.number_of_kids] ? rowObj[COLUMN_INDEX.number_of_kids]: '--',\n                address_street: rowObj[COLUMN_INDEX.address_street] ? rowObj[COLUMN_INDEX.address_street]: '--',\n                crossing_city: rowObj[COLUMN_INDEX.crossing_city] ? rowObj[COLUMN_INDEX.crossing_city]: '--',\n                border_crossing: rowObj[COLUMN_INDEX.border_crossing] ? rowObj[COLUMN_INDEX.border_crossing]: '--',\n                comments: rowObj[COLUMN_INDEX.comments] ? rowObj[COLUMN_INDEX.comments]: '--',\n                deny: rowObj[COLUMN_INDEX.deny] ? rowObj[COLUMN_INDEX.deny]: '--',\n                isDisabled: visited_in_last_week === \"Yes\" ? true : false,\n                isActive: rowObj[COLUMN_INDEX.deny] === \"Deny\" ? true : false,\n            }\n        })\n        return data\n};\n\nconst formatForWrite = (row: IDataRow) => {\n    return {\n        'UID': row.UID ? row.UID : '--',\n        'Family Surname': row.family_surname ? row.family_surname :'--',\n        'Number of Kids/Кількість дітей': row.number_of_kids ? row.number_of_kids : '--',\n        'Family Member Two': row.family_member_two ? row.family_member_two : '--',\n        'Family Member Three': row.family_member_three ? row.family_member_three : '--',\n        'Address - Street/ Вулиця': row.address_street? row.address_street : '--',\n        'Border Crossing Date/ Дата перетину кордону': row.border_crossing ? row.border_crossing : '--',\n        'City where came from/ Місто походження': row.crossing_city ? row.crossing_city : '--',\n        'Last Visit': row.last_visit? row.last_visit  : '--',\n        'Visited in Last Week': row.visited_in_last_week? row.visited_in_last_week : '--',\n        'Comments': row.comments ? row.comments : '--',\n        'Deny': row.deny? row.deny  : '--',\n        'Previous Visits': row.previous_visits ? row.previous_visits  : '--'\n    }\n}\n\nexport const submitUser = (editedUser: any, row: IDataRow | null, data: any, setDataFormatted: (data: unknown[]) => {}, setEditedUser: (value: {}) => {}) => {\n    if(row === null) {\n        const formatted = formatForWrite(editedUser);\n        writeDataNew(formatted).then();\n        setDataFormatted(_.flatten(_.concat(data, editedUser)))\n    }\n    else {\n        const result = {...row, ...editedUser}\n        const newData = _.map(data, (oldRow) => {\n            if (oldRow.UID === row.UID) {\n                const res = {\n                    ...oldRow,\n                    ...result,\n                }\n                const finalRes = {\n                    ...res,\n                    visited_in_last_week: checkLastVisit(res.last_visit),\n                    isDisabled: res.visited_in_last_week === \"Yes\" ? true : false,\n                    isActive: res.deny === \"Deny\" || res.deny === \"deny\"  ? true : false,\n                }\n                const formatted = formatForWrite(finalRes);\n                writeData(formatted).then();\n                return finalRes\n            }\n            else {\n                return oldRow\n            }\n        })\n        setDataFormatted(newData);\n    }\n    setEditedUser({})\n}\nexport const checkIn = (user: any, data: any, setDataFormatted: (data: unknown[]) => {}, setCheckInDisabled:(value: boolean) => {}, searchResult: any, setSearchResult: (data: unknown[])=>{}) => {\n   const result =_.map(_.isEmpty(searchResult) ? data : searchResult, (row) => {\n        if(row.UID == user) {\n            const result = {\n                ...row,\n                last_visit: format(new Date(), 'yyyy-MM-dd'),\n                visited_in_last_week: 'Yes',\n                isSelected: false,\n                isDisabled: true,\n                previous_visits: _.isEmpty(row.last_visit) ? row.previous_visits : [row.previous_visits, row.last_visit]\n            }\n            writeData(formatForWrite(result)).then();\n            return result\n        }\n        return row\n    })\n    _.isEmpty(searchResult) ? setDataFormatted(result) : setSearchResult(result)\n    setCheckInDisabled(true)\n}\nexport const exportData = (data: any) => {\n    const ws = XLSX.utils.json_to_sheet(data);\n    const wb =  XLSX.utils.book_new();\n    const path = require('path');\n    const filePath = path.join(__dirname, 'Data/example_data.xlsx');\n    XLSX.utils.book_append_sheet(wb, ws, \"Example_Data\");\n    XLSX.writeFile(wb, filePath)\n}\n\n\nexport const getSearchResults = (searchValue: string, data: IDataRow[]) => {\n    const result = _.map(data, (row) => {\n        const options = row.UID + row.family_surname + row.family_member_two + row.family_member_three\n        if(_.includes(_.toLower(options), _.toLower(searchValue))) {\n            return row\n        }\n    })\n    return _.without(result, undefined)as IDataRow[]\n}\n","import axios from \"axios\"\nimport React from \"react\";\n\nexport const getData = async () => {\n    const result = await axios.get('https://sheet.best/api/sheets/259f7bec-fcd6-4be1-846d-c3c5dd47c8c3').then(res => {\n        return res\n    }).catch((error) => {\n        console.log(error);\n    });\n    return result\n}\n\nexport const writeData = async (data: { \"Family Member Three\": string; \"Visited in Last Week\": string; Comments: string; Deny: string; \"Previous Visits\": string[] | string; UID: string; \"City where came from/ Місто походження\": string; \"Border Crossing Date/ Дата перетину кордону\": string; \"Family Surname\": string; \"Family Member Two\": string; \"Number of Kids/Кількість дітей\": number | string; \"Address - Street/ Вулиця\": string; \"Last Visit\": string }) => {\n    const result = await axios.patch(`https://sheet.best/api/sheets/259f7bec-fcd6-4be1-846d-c3c5dd47c8c3/UID/${data.UID}`, data).then( response => {console.log(response)})\n}\nexport const writeDataNew = async (data: { \"Family Member Three\": string; \"Visited in Last Week\": string; Comments: string; Deny: string; \"Previous Visits\": string[] | string; UID: string; \"City where came from/ Місто походження\": string; \"Border Crossing Date/ Дата перетину кордону\": string; \"Family Surname\": string; \"Family Member Two\": string; \"Number of Kids/Кількість дітей\": number | string; \"Address - Street/ Вулиця\": string; \"Last Visit\": string }) => {\n    const result = await axios.post(`https://sheet.best/api/sheets/259f7bec-fcd6-4be1-846d-c3c5dd47c8c3`, data).then( response => {console.log(response)})\n}","module.exports = __webpack_public_path__ + \"static/media/logo.21319a63.png\";","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport {TextField} from \"lucid-ui\";\nimport {COLUMN_FIELD, IDataRow} from \"../Interfaces/interfaces\";\nimport _ from \"lodash\";\n\ninterface IRowTableProps {\n    user: any,\n    canEdit: boolean,\n    editedUser: {},\n    setEditedUser: (value: {}) => {}\n}\n\nconst RowTable = (props: IRowTableProps) => {\n    const {user, editedUser, setEditedUser} = props;\n    return (\n        <div>\n            {\n            _.map(COLUMN_FIELD, (column) => {\n                return (\n                    <div>\n                        <div>\n                            {column}\n                        </div>\n                        <TextField value={_.get(user, column)} onChange={(value) => {setEditedUser(_.set(editedUser,column, value))}}/>\n                    </div>\n                )\n            })\n        }\n        </div>\n    )\n}\n\nexport default RowTable","import {IDataRow} from \"../Interfaces/interfaces\";\nimport React, {useState} from \"react\";\nimport Overlay from \"lucid-ui/dist/esm/components/Overlay/Overlay\";\nimport _ from \"lodash\";\nimport {checkIn, submitUser} from \"../Utils/DataTable.util\";\nimport RowTable from \"./RowTable\";\n\nexport interface IProps {\n    searchValue?: string,\n    isShown: boolean,\n    canEdit: boolean,\n    setShowOverlay(value: boolean): any,\n    dataFormatted: IDataRow[],\n    setDataFormatted(value: IDataRow[]): any,\n    setCheckInDisabled(value: boolean):any,\n    setSearchValue(value: any):any,\n    searchResult: IDataRow[],\n    setSearchResult(value: IDataRow[]):any,\n}\nconst ResultOverlay: React.FC<IProps> = (props:IProps) => {\n    const {searchValue = null, isShown, canEdit, setShowOverlay, dataFormatted, setDataFormatted, setCheckInDisabled, setSearchValue, searchResult, setSearchResult} = props\n    const [editedUser, setEditedUser] = useState({})\n    const user: IDataRow | null = searchValue ?_.find(dataFormatted, (row) => {\n        if(row.UID || row.family_surname) {\n            if (row.UID == searchValue || row.family_surname == searchValue) {\n                return row as unknown as IDataRow\n            }\n        }\n    }) as unknown as IDataRow : null;\n    return (\n        <Overlay\n            isShown={isShown}\n            isModal={true}\n            onEscape={() => props.setShowOverlay(false)}\n            onBackgroundClick={() => setShowOverlay(false)} >\n            <div className='main-content'>\n                <>\n                <form className='Add-Point-Form' method=\"get\">\n                    <label>\n                        {`${searchValue}`}\n                    </label>\n                </form>\n                <RowTable user={user} canEdit={canEdit as boolean} editedUser={editedUser} setEditedUser={setEditedUser as (value: {}) => {}}/>\n                <div className='Controls'>\n                    <button onClick={() =>\n                    {\n                        setShowOverlay(false);\n                        canEdit?  submitUser(editedUser, user, dataFormatted, setDataFormatted as (data: {}) => {}, setEditedUser as (() => {})):\n                            checkIn(user, dataFormatted as IDataRow[], setDataFormatted as (data: {}) => {}, setCheckInDisabled as (value: {}) => {}, searchResult as IDataRow[], setSearchResult as (data: {}) => {});\n                        setSearchValue(null)\n\n                    }\n                    }>\n                        {canEdit? 'Submit': 'Check In'}\n                    </button>\n                    <button onClick={() => {setShowOverlay(false); setSearchValue(null)}}>\n                        Cancel\n                    </button>\n                </div>\n                    </>\n            </div>\n        </Overlay>\n    )\n}\nexport default ResultOverlay","import React, {useEffect, useMemo, useState} from 'react';\nimport logo from './logo.png';\nimport './App.css';\nimport _ from \"lodash\"\nimport {checkIn, exportData, formatData, getSearchResults} from \"./Utils/DataTable.util\";\nimport {COLUMN_FIELD, IDataRow} from \"./Interfaces/interfaces\";\nimport DataTable from \"lucid-ui/dist/esm/components/DataTable/DataTable\";\nimport ResultOverlay, {IProps} from \"./Components/ResultOverlay\";\nimport {SearchField} from \"lucid-ui\";\nimport {getData} from \"./api/bestSheetApi\";\n\nconst Home = () => {\n        const [data, setData] = useState({rows: [] as [], cols: []} as any);\n        const [dataFormatted, setDataFormatted] = useState( [] as unknown as IDataRow[]);\n        const [selected, setSelected] = useState('-1');\n        const [checkInDisabled, setCheckInDisabled] = useState(true);\n        const [editDisabled, setEditDisabled] = useState(true);\n        const [showOverlay, setShowOverlay] = useState(false as boolean);\n        const [searchValue, setSearchValue] = useState('' as string)\n        const [canEdit, setCanEdit] = useState(false as boolean);\n        const [searchResult, setSearchResult] = useState([] as IDataRow[])\n        let tempvar = 0;\n        useEffect(() => {\n            if (tempvar === 0) {\n                getData().then((res: any) => {\n                    const data = _.flatten(res.data) as unknown as IDataRow\n                    const formatRetrievedData = formatData(data);\n                    setDataFormatted(formatRetrievedData)\n                })\n                tempvar = 1;\n            }\n\n        }, [data])\n\n        const selectColumn = (index: IDataRow) => {\n            setEditDisabled(selected === index.UID);\n            setCheckInDisabled(selected === index.UID || index.visited_in_last_week === \"Yes\")\n            const swapSelected = _.map(_.isEmpty(searchResult) ? dataFormatted : searchResult, (row) => {\n                if (index.UID === row.UID) {\n                    return {\n                        ...row,\n                        isSelected: index.isSelected ? false : true,\n                    }\n                } else {\n                    return {\n                        ...row,\n                        isSelected: false\n                    }\n                }\n            }) as IDataRow[];\n            setSearchValue(index.UID)\n            _.isEmpty(searchResult) ? setDataFormatted(swapSelected) : setSearchResult(swapSelected)\n\n        }\n\n        const OverlayProps = {\n            searchValue: searchValue,\n            isShown: showOverlay,\n            canEdit: canEdit,\n            setShowOverlay: (value: boolean) => {\n                setShowOverlay(value)\n            },\n            dataFormatted: dataFormatted,\n            setDataFormatted: (value: IDataRow[]) => {\n                setDataFormatted(value)\n            },\n            setCheckInDisabled: (value: boolean) => {\n                setCheckInDisabled(value)\n            },\n            setSearchValue: (value: any) => {\n                setSearchValue(value)\n            },\n            searchResult,\n            setSearchResult\n        }\n        return (\n            <div className=\"App\">\n                {showOverlay &&\n                <div id=\"opaque\"></div>\n                }\n                <header className=\"App-header\">\n                    <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n                    <div>\n                        JCC Krakow Check In\n                    </div>\n                </header>\n                <div className=\"Grid-Header\">\n                    <div className=\"Buttons\">\n                        <button onClick={() => {\n                            exportData(dataFormatted)\n                        }}>\n                            Export\n                        </button>\n                        <button disabled={checkInDisabled}\n                                onClick={() => checkIn(selected, dataFormatted as IDataRow[], setDataFormatted as (data: {}) => {}, setCheckInDisabled as (value: boolean) => {}, searchResult, setSearchResult as (data: {}) => {})}>\n                            Check In\n                        </button>\n                        <button onClick={() => {\n                            setShowOverlay(true);\n                            setCanEdit(true)\n                        }}>\n                            Add Family\n                        </button>\n                        <button disabled={editDisabled} onClick={() => {\n                            setShowOverlay(true);\n                            setCanEdit(true)\n                        }}>\n                            Edit Family\n                        </button>\n                    </div>\n                </div>\n                <div className=\"App-Body\">\n                    <p>\n                        <div className='search-bar'>\n                            Search by surname or UID:\n                            <SearchField onChangeDebounced={(value: string) => setSearchValue(value)}\n                                         onSubmit={() => setSearchResult(getSearchResults(searchValue, dataFormatted))}/>\n                            <div className='submit'>\n                                <button\n                                    onClick={() => setSearchResult(getSearchResults(searchValue, dataFormatted))}> Submit\n                                </button>\n                            </div>\n                        </div>\n                        <ResultOverlay {...OverlayProps as IProps}/>\n\n                        <div className=\"data-table\">\n                            {dataFormatted ? (\n                                <DataTable\n                                    data={_.isEmpty(searchResult) ? dataFormatted : searchResult}\n                                    isSelectable\n                                    onSelect={(index) => {\n                                        setSelected(index.UID);\n                                        selectColumn(index)\n                                    }}\n                                    emptyCellText={\"--\"}\n                                    hasLightHeader={false}\n                                >\n                                    {_.map(COLUMN_FIELD, (name) => {\n                                        return (\n                                            <DataTable.Column field={`${name}`}> {name} </DataTable.Column>)\n\n                                    })}\n                                </DataTable>\n                            ) : (\n                                \"\"\n                            )}\n                        </div>\n                    </p>\n                </div>\n                <a\n                    className=\"App-link\"\n                    href=\"https://reactjs.org\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                </a>\n            </div>\n        );\n    }\n\nexport default Home;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Home from \"./Home\";\nimport { createStore } from 'redux';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\n\nroot.render(\n  <React.StrictMode>\n    <Home />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\nconst countReducer = function (state = 0, action: { type: any; }) {\n    switch (action.type) {\n        case \"INCREMENT\":\n            return state + 1;\n        case \"DECREMENT\":\n            return state - 1;\n        default:\n            return state;\n    }\n};\nlet store = createStore(countReducer);","export interface IRow {\n    id: number;\n    householdMembers?: IClient[];\n    lastVisit: string;\n    visitedInLastWeek: string;\n    address?: string;\n    hometown?: string;\n    isSelected?: boolean\n}\n\nexport interface IClient {\n    firstName?: string;\n    lastName?: string;\n    age?: number;\n    gender?: string;\n}\n\nexport interface IDataRow {\n    UID: string;\n    family_surname?: string;\n    family_member_two?: string;\n    family_member_three?: string;\n    number_of_kids?: number;\n    address_street?: string;\n    border_crossing?: string;\n    crossing_city?: string;\n    last_visit?: string;\n    visited_in_last_week?: string;\n    comments?: string;\n    deny?: string;\n    previous_visits?: string[];\n    isSelected?: boolean;\n}\nexport enum COLUMN_FIELD {\n    UID='UID',\n    family_surname= 'family_surname',\n    number_of_kids= 'number_of_kids',\n    family_member_two= 'family_member_two',\n    family_member_three= 'family_member_three',\n    address_street= 'address_street',\n    crossing_city='crossing_city',\n    border_crossing= 'border_crossing',\n    last_visit= 'last_visit',\n    visited_in_last_week= 'visited_in_last_week',\n    comments= 'comments',\n    deny='deny',\n}\n\nexport enum COLUMN_NAMES {\n    UID= 'UID',\n    family_surname= 'Family Surname',\n    number_of_kids='Number of Kids/Кількість дітей',\n    family_member_two='Family Member Two',\n    family_member_three='Family Member Three',\n    address_street= 'Address - Street/ Вулиця',\n    border_crossing= 'Border Crossing Date/ Дата перетину кордону',\n    crossing_city='City where came from/ Місто походження',\n    last_visit= 'Last Visit',\n    visited_in_last_week= 'Visited in Last Week',\n    comments= 'Comments',\n    deny='Deny',\n    previous_visits='Previous Visits'\n}\nexport enum COLUMN_INDEX {\n    UID= 0,\n    family_surname= 1,\n    number_of_kids= 3,\n    family_member_two=2,\n    family_member_three=4,\n    address_street= 6,\n    crossing_city=9,\n    border_crossing= 10,\n    last_visit= 11,\n    visited_in_last_week= 12,\n    comments= 13,\n    deny=14,\n    previous_visits=15\n}\nexport const COLUMN_ORDER: Record<number, COLUMN_NAMES> = {\n    1: COLUMN_NAMES.UID,\n    2: COLUMN_NAMES.family_surname,\n    4: COLUMN_NAMES.number_of_kids,\n    7: COLUMN_NAMES.address_street,\n    10: COLUMN_NAMES.crossing_city,\n    11: COLUMN_NAMES.border_crossing,\n    12: COLUMN_NAMES.last_visit,\n    13: COLUMN_NAMES.visited_in_last_week,\n    14: COLUMN_NAMES.comments,\n    15: COLUMN_NAMES.deny,\n    16: COLUMN_NAMES.previous_visits,\n    17: COLUMN_NAMES.family_member_two,\n    18: COLUMN_NAMES.family_member_three\n}"],"sourceRoot":""}